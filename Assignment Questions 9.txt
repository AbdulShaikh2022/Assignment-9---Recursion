Question 1

Given an integer `n`, return *`true` if it is a power of two. Otherwise, return `false`*.

An integer `n` is a power of two, if there exists an integer `x` such that `n == 2x`

Answer- 

def isPowerOfTwo(n):
	if (n == 0):
		return False
	while (n != 1):
		if (n % 2 != 0):
			return False
		n = n // 2

	return True



if __name__ == "__main__":

	# Function call
	if(isPowerOfTwo(31)):
		print('Yes')
	else:
		print('No')
	if(isPowerOfTwo(64)):
		print('Yes')
	else:
		print('No')

Question 2
Given a number n, find the sum of the first natural numbers.
Answer- 

def findSum(n):
	sum = 0
	x = 1
	while x <= n:
		sum = sum + x
		x = x + 1
	return sum


# Driver code
n = 5
print findSum(n)


 **Question 3**

Given a positive integer, N. Find the factorial of N. 

Answer
Code 

def findSum(n):
	sum = 0
	x = 1
	while x <= n:
		sum = sum + x
		x = x + 1
	return sum

n = 5
print findSum(n)


 **Question 4**

Given a number N and a power P, the task is to find the exponent of this number raised to the given power, i.e. N^P.

Answer-

Code


def power(N, P):

	
	if P == 0:
		return 1

	# Recurrence relation
	return (N*power(N, P-1))



if __name__ == '__main__':
	N = 5
	P = 2

	print(power(N, P))

Question 5
Given an array of integers arr, the task is to find maximum element of that array using recursion.

Answer-

def findMinRec(A, n):
	
	# if size = 0 means whole array
	# has been traversed
	if (n == 1):
		return A[0]
	return min(A[n - 1], findMinRec(A, n - 1))

# Driver Code
if __name__ == '__main__':
	A = [1, 4, 45, 6, -50, 10, 2]
	n = len(A)
	print(findMinRec(A, n))


Question 7
Given a string S, the task is to write a program to print all permutations of a given string

Answer-

Code
def toString(List):
	return ''.join(List)




def permute(a, l, r):
	if l == r:
		print(toString(a))
	else:
		for i in range(l, r):
			a[l], a[i] = a[i], a[l]
			permute(a, l+1, r)
			a[l], a[i] = a[i], a[l] # backtrack


# Driver code
string = "ABC"
n = len(string)
a = list(string)

permute(a, 0, n)

 **Question 8**

Given an array, find a product of all array elements.

Answer-

Code

arr=[1,2,3,4,5]
product=1


i=0
j=len(arr)-1

#add first and last simultaneously
while(i<j):
	product*=arr[i]*arr[j]
	i+=1
	j-=1
	

if(i==j):
	product*=arr[i]

print(product)

